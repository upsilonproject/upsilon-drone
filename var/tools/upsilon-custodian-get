#!/usr/bin/python

from upsilon import amqp, config
import pika
import sys
import json
from prettytable import PrettyTable

def onMessage(channel, method, properties, body):
    global args

    if properties.headers["status"] == "found":
        if args.format == "":
            table = PrettyTable(['key', 'value'])
            
            struct = json.loads(body)

            for key, value in struct[0].iteritems():
                table.add_row([key, value])

            print table
        else:
            print body
    else:
        print "status:", properties.headers['status']

    channel.basic_ack(delivery_tag = method.delivery_tag)
    sys.exit(0)

parser = config.commonArgumentParser()
parser.add_argument('itemType')
parser.add_argument('id', type = int)
parser.add_argument('-f', '--format', default = '')
args = parser.parse_args()

conn = amqp.Connection(args.server, callback = onMessage)
conn.bind("upsilon.custodian.results")

print("publishing")

newReq = args.itemType + "/" + str(args.id)

headers = {}
headers["upsilon-msg-type"] = "GET_ITEM"
headers["itemType"] = args.itemType;
headers["itemQuery"] = args.id
headers['result-format'] = args.format

props = pika.BasicProperties(headers = headers)
conn.channel.basic_publish(exchange = "ex_upsilon", routing_key = 'upsilon.custodian.requests', properties = props, body = "")

conn.startConsuming()
